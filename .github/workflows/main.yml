name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    paths:
      # - '**' # Include all files by default
      - '!infra/**' # Exclude terraform changes
  pull_request:
    branches: [ main ]
    paths:
      # - '**' # Include all files by default
      - '!infra/**' # Exclude terraform changes

env:
  APP_VERSION: 1.0.0

permissions:
  id-token: write # For OIDC
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci # 'npm ci' is preferred for CI/CD environments as it uses package-lock.json

      - name: Run tests (optional)
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: us-west-2

      - name: Build Docker image
        run: |
          docker build -t 411053069660.dkr.ecr.us-west-2.amazonaws.com/devops-challenge:${{ env.APP_VERSION }} .

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image to ECR
        run: |
          docker push 411053069660.dkr.ecr.us-west-2.amazonaws.com/devops-challenge:${{ env.APP_VERSION }}
    
